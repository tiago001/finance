<div class="input-group mb-2">
    <span class="input-group-text" id="basic-addon1">Nome</span>
    <input type="text" class="form-control nome" aria-label="nome" aria-describedby="basic-addon1">
</div>

<div class="input-group mb-2">
    <span class="input-group-text" id="basic-addon1">Valor</span>
    <input type="text" inputmode="decimal" class="form-control money_value currency" aria-label="valor" aria-describedby="basic-addon1" placeholder="0.00">
</div>

<div class="input-group mb-2">
    <span class="input-group-text" id="basic-addon1">Categoria</span>
    <select class="form-select category" aria-label="Default select example">
        <option value="0" selected>Selecione a categoria</option>
        {% for category in categories %}
            <option value="{{category.id}}">{{category.category}}</option>
        {% endfor %}
    </select>
</div>

<div class="input-group mb-2 date-input">
    <span class="input-group-text" id="basic-addon1">Data</span>
    <input type="date" class="form-control date" data-provide="datepicker" locked="false">
    <button class="btn bg-body-secondary" type="button" onclick="toggleDate()">
        <i class="ti ti-lock" style="display: none;"></i>
        <i class="ti ti-lock-open" style="display: block;"></i>
    </button>
</div>
  
<button type="button" class="btn btn-primary w-100" onclick="save_expense()">Salvar Despesa</button>

<div class="row mt-2">
    <div class="d-none d-sm-block col-md-4 col-lg-7"></div>
    <div class="col-4 col-md-3 col-lg-2 m-auto p-0">
        <span class="total">Total 0.00</span>
    </div>
    <div class="col-8 col-md-5 col-lg-3 p-0">
        <select class="form-select search_type" onchange="search_expenses()">
            <option value="currentMonth" selected>Despesas do mês atual</option>
            <option value="lastExpenses">Despesas mais recentes</option>
            <option value="lastAddedExpenses">Últimas despesas adicionadas</option>
        </select>
    </div>
</div>

<div class="row expenses mt-2">
    
</div>

<script>
    
    setTimeout(function() {
        $('.nome').on('blur', function () { predictCategory() })
        $('.currency').mask("#0.00", {reverse: true});
    }, 50);

    date = new Date();
    document.getElementsByClassName("date")[0].valueAsDate = new Date(date.getFullYear(), date.getMonth(), date.getDate())
    
    function search_expenses(){
        fetch("search_expenses?" + new URLSearchParams({
            "name": document.getElementsByClassName("search_type")[0].value,
            "value1": document.getElementsByClassName("date")[0].valueAsDate.toISOString().split("T")[0],
        }), {redirect: 'follow'})
        .then((response) => {
            if (response.redirected) window.location.href = response.url;
            return response.json()
        })
        .then((json) => {
            fill_expenses(json)
        })
        .catch((error) => {
            console.warn(error);
        });
    }

    function save_expense(){
        if(document.getElementsByClassName("nome")[0].value.length == 0){
            mensagemErro("Preencha o nome da despesa")
            return
        }
        if(document.getElementsByClassName("money_value")[0].value.length == 0){
            mensagemErro("Preencha o valor da despesa")
            return
        }
        if(document.getElementsByClassName("category")[0].value == 0){
            mensagemErro("Preencha a categoria da despesa")
            return
        }


        fetch("save_expense?" + new URLSearchParams({
            "name": document.getElementsByClassName("nome")[0].value,
            "value": document.getElementsByClassName("money_value")[0].value,
            "category_id": document.getElementsByClassName("category")[0].value,
            "date": document.getElementsByClassName("date")[0].value}),
        {
            method: "POST"
        })
        .then((response) => {
            if(response.status != 200){
                Swal.fire({
                    position: 'top-end',
                    icon: 'error',
                    title: 'Erro ao salvar despesa',
                    showConfirmButton: false,
                    timer: 2500,
                    toast: true
                })
            } else {
                Swal.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: 'Despesa salva com sucesso',
                    showConfirmButton: false,
                    timer: 1500,
                    toast: true
                })

                document.getElementsByClassName("nome")[0].value = ""
                document.getElementsByClassName("money_value")[0].value = ""
                document.getElementsByClassName("category")[0].selectedIndex = 0
                if(document.getElementsByClassName("date")[0].getAttribute("locked") == "false") {
                    let date = new Date();
                    document.getElementsByClassName("date")[0].valueAsDate = new Date(date.getFullYear(), date.getMonth(), date.getDate())
                }

                document.getElementsByClassName("expenses").innerHTML = ''
                search_expenses()
                setTimeout(() => {
                    document.getElementsByClassName("nome")[0].focus();
                }, 200);

                return response.text()
            }
        })
        .catch((error) => {
            console.warn(error);
        });
    }

    function edit_expense(id){
        fetch("edit_expense?" + new URLSearchParams({
            "id": id,
            "name": document.getElementsByClassName("editnome")[0].value,
            "value": document.getElementsByClassName("editmoney_value")[0].value,
            "category_id": document.getElementsByClassName("editcategory")[0].value,
            "date": document.getElementsByClassName("editdate")[0].value}),
        {
            method: "POST"
        })
        .then((response) => response.text())
        .then(() => {
            search_expenses()
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: 'Despesa alterada com sucesso',
                showConfirmButton: false,
                timer: 2000,
                toast: true
            })
        })
        .catch((error) => {
            console.warn(error);
        });
    }

    function fill_expenses(json){
        document.getElementsByClassName("expenses")[0].innerHTML = ''
        let searchType = document.getElementsByClassName("search_type")[0].value
        document.getElementsByClassName("expenses")[0].insertAdjacentHTML("beforeend",
            `
                <div class="col-3 d-none d-sm-block">
                    Nome
                </div>
                <div class="col-3 d-none d-sm-block text-center">
                    Valor
                </div>
                <div class="col-3 d-none d-sm-block text-center">
                    Categoria
                </div>
                <div class="col-2 d-none d-sm-block text-center">
                    Data
                </div>
                <div class="col-1 d-none d-sm-block"></div>
            `
        )

        document.getElementsByClassName("expenses")[0].insertAdjacentHTML("beforeend", `<div class="row future-expenses p-0" style="background-color: #eeeeee;border-radius: 5px;"></div>`);

        let total = 0
        let lastDate = ""

        json.forEach(e => {
            total += e.value

            tagExpense = "expenses"
            if(document.getElementsByClassName("search_type")[0].value != "lastAddedExpenses"){
                if(new Date(e.date+" 00:00") > new Date()) {
                    tagExpense = "future-expenses"
                }
            }

            if(e.date != lastDate){
                document.getElementsByClassName(tagExpense)[0].insertAdjacentHTML(
                    "beforeend",
                    `<div class="col-11 mt-2 text-center d-block d-sm-none">
                            <i class="ti ti-calendar"></i> ${new Date(e.date+"T00:00").toLocaleString().substr(0,10)}
                        </div>`)
                document.getElementsByClassName(tagExpense)[0].insertAdjacentHTML("beforeend",
                    `
                        <div class="col-4 col-sm-3 d-block d-sm-none">
                            Nome
                        </div>
                        <div class="col-3 col-sm-3 d-block d-sm-none text-center">
                            Valor
                        </div>
                        <div class="col-4 col-sm-3 d-block d-sm-none text-center">
                            Categoria
                        </div>
                        <div class="col-1 d-block d-sm-none"></div>
                    `)
            }

            document.getElementsByClassName(tagExpense)[0].insertAdjacentHTML("beforeend",
            `
                <div class="col-4 col-sm-3 text-truncate" expense="${e.id}" value=${e.name} ${e.date != lastDate ? "style=\"border-top: 2px solid #e1e1e1;\"" : ""}>
                    <span class="name" expense="${e.id}" value=${e.name} contenteditable="true">${e.name}</span> 
                </div>
                <div class="col-3 col-sm-3 text-center" expense="${e.id}" ${e.date != lastDate ? "style=\"border-top: 2px solid #e1e1e1;\"" : ""}>
                    <span class="valor" expense="${e.id}" value="${e.value.toFixed(2)}" contenteditable="true">${e.value.toFixed(2)}</span>
                </div>
                <div class="col-4 col-sm-3 text-center text-truncate" ${e.date != lastDate ? "style=\"border-top: 2px solid #e1e1e1;\"" : ""}>
                    ${e.category} 
                </div>
                <div class="col-12 col-sm-2 text-center d-none d-sm-block" ${e.date != lastDate ? "style=\"border-top: 2px solid #e1e1e1;\"" : ""}>
                        ${e.date != lastDate ? new Date(e.date+"T00:00").toLocaleString().substr(0,10) : ""}
                </div>
                <div class="col-1 text-center p-0" ${e.date != lastDate ? "style=\"border-top: 2px solid #e1e1e1;\"" : ""}>
                    <button class="btn btn-sm btn-light py-0" onclick="open_edit_expense(${e.id})" data-bs-toggle="modal" data-bs-target="#exampleModal">
                        <span><i class="ti ti-pencil"></i></span>
                    </button>
                </div>
            `)

            lastDate = e.date
        });

        if(document.getElementsByClassName("future-expenses")[0].childNodes.length > 0){
            document.getElementsByClassName("future-expenses")[0].insertAdjacentHTML("beforeend", 
            `<div class="col-12 text-center" style="border-top: 2px solid #e1e1e1;">
                Despesas futuras 
                <i class="ti ti-arrow-narrow-up"></i>
            </div>`
            );
        }

        if(document.getElementsByClassName("search_type")[0].value == "currentMonth"){
            document.getElementsByClassName("total")[0].innerHTML = `Total ${total.toFixed(2)}`
        } else {
            document.getElementsByClassName("total")[0].innerHTML = ""
        }

        $('.name').on('blur', function(e){
            if(e.target.textContent.trim() != e.target.getAttribute("value")) {
                e.target.setAttribute("value", e.target.textContent.trim()) 
                fetch("edit_expense?" + new URLSearchParams({
                    "name": e.target.textContent.trim(),
                    "id": e.target.getAttribute("expense")}),
                {
                    method: "POST"
                })
                .then((response) => response.text())
                .then((html) => {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'success',
                        title: 'Despesa salva com sucesso',
                        showConfirmButton: false,
                        timer: 2000,
                        toast: true
                        })
                })
                .catch((error) => {
                    console.warn(error);
                });
            }
        })
        $('.valor').on('blur', function(e){
            if(e.target.textContent.trim() != e.target.getAttribute("value")) {
                e.target.setAttribute("value", e.target.textContent.trim()) 
                fetch("edit_expense?" + new URLSearchParams({
                    "value": e.target.textContent.trim(),
                    "id": e.target.getAttribute("expense")}),
                {
                    method: "POST"
                })
                .then((response) => response.text())
                .then((html) => {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'success',
                        title: 'Despesa salva com sucesso',
                        showConfirmButton: false,
                        timer: 2000,
                        toast: true
                        })
                })
                .catch((error) => {
                    console.warn(error);
                });
            }
        })
    }
    
    function predictCategory() {
        fetch("predict_category?" + new URLSearchParams({
            "name": document.getElementsByClassName("nome")[0].value
        }), {redirect: 'follow'})
        .then((response) => {
            if (response.redirected) window.location.href = response.url;
            return response.json()
        })
        .then((json) => {
            if(json.category_id != null){
                document.getElementsByClassName("category")[0].value = json.category_id
            } else {
                document.getElementsByClassName("category")[0].selectedIndex = 0
            }
        })
        .catch((error) => {
            console.warn(error);
        });
    }

    function toggleDate(){
        if(document.getElementsByClassName("date")[0].getAttribute("locked") == "false") {
            document.getElementsByClassName("date")[0].setAttribute("locked", true)

        } else {
            document.getElementsByClassName("date")[0].setAttribute("locked", false)
        }

        $('.date-input button').toggleClass("bg-body-secondary bg-primary-subtle text-primary")
        $('.date-input .ti-lock').toggle()
        $('.date-input .ti-lock-open').toggle()
    }

    search_expenses()
</script>