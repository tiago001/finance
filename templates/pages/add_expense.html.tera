{% extends "index" %} {% block page %}
<div class="input-group mb-3">
    <span class="input-group-text" id="basic-addon1">Nome</span>
    <input type="text" class="form-control nome" aria-label="nome" aria-describedby="basic-addon1">
</div>

<div class="input-group mb-3">
    <span class="input-group-text" id="basic-addon1">Valor</span>
    <input type="number" class="form-control money_value currency" aria-label="valor" aria-describedby="basic-addon1">
</div>

<div class="input-group mb-3">
    <span class="input-group-text" id="basic-addon1">Categoria</span>
    <select class="form-select category" aria-label="Default select example">
        <option value="Indefinido" selected>Selecione a categoria</option>
        <option value="Education">Education</option>
        <option value="Food">Food</option>
        <option value="Fun">Fun</option>
        <option value="Transport">Transport</option>
        <option value="Tech">Tech</option>
        <option value="Mercado">Mercado</option>
        <option value="Others">Others</option>
    </select>
</div>

<div class="input-group mb-3">
    <span class="input-group-text" id="basic-addon1">Data</span>
    <input type="date" class="form-control date" data-provide="datepicker">
</div>
  
<button type="button" class="btn btn-primary w-100" onclick="save_expense()">Salvar Despesa</button>

<div class="row mt-2">
    <div class="col-7"></div>
    <div class="col-2 m-auto">
        <span class="total">Total 0.00</span>
    </div>
    <div class="col-3">
        <select class="form-select search_type" onchange="search_expenses()">
            <option value="currentMonth" selected>Despesas do mês atual</option>
            <option value="lastExpenses">Despesas mais recentes</option>
            <option value="lastAddedExpenses">Últimas despesas adicionadas</option>
        </select>
    </div>
</div>

<div class="row expenses mt-2">
</div>

<script>
    let date = new Date();
    document.getElementsByClassName("date")[0].valueAsDate = new Date(date.getFullYear(), date.getMonth(), date.getDate())
    
    function search_expenses(){
        fetch("search_expenses?" + new URLSearchParams({
            "name": document.getElementsByClassName("search_type")[0].value
        }), {redirect: 'follow'})
        .then((response) => {
            if (response.redirected) window.location.href = response.url;
            return response.json()
        })
        .then((json) => {
            fill_expenses(json)
        })
        .catch((error) => {
            console.warn(error);
        });
    }

    function save_expense(){
        fetch("save_expense?" + new URLSearchParams({
            "name": document.getElementsByClassName("nome")[0].value,
            "value": document.getElementsByClassName("money_value")[0].value,
            "category": document.getElementsByClassName("category")[0].value,
            "date": document.getElementsByClassName("date")[0].value}),
        {
            method: "POST"
        })
        .then((response) => {
            if(response.status != 200){
                Swal.fire({
                    position: 'top-end',
                    icon: 'error',
                    title: 'Erro ao salvar despesa',
                    showConfirmButton: false,
                    timer: 2500,
                    toast: true
                })
            } else {
                Swal.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: 'Despesa salva com sucesso',
                    showConfirmButton: false,
                    timer: 2000,
                    toast: true
                })

                document.getElementsByClassName("nome")[0].value = ""
                document.getElementsByClassName("money_value")[0].value = ""
                document.getElementsByClassName("category")[0].selectedIndex = 0
                let date = new Date();
                document.getElementsByClassName("date")[0].valueAsDate = new Date(date.getFullYear(), date.getMonth(), date.getDate())

                document.getElementsByClassName("expenses").innerHTML = ''
                search_expenses()
                setTimeout(() => {
                    document.getElementsByClassName("nome")[0].focus();
                }, 200);

                return response.text()
            }
        })
        .catch((error) => {
            console.warn(error);
        });
    }

    function edit_expense(id){
        fetch("edit_expense?" + new URLSearchParams({
            "id": id,
            "name": document.getElementsByClassName("editnome")[0].value,
            "value": document.getElementsByClassName("editmoney_value")[0].value,
            "category": document.getElementsByClassName("editcategory")[0].value,
            "date": document.getElementsByClassName("editdate")[0].value}),
        {
            method: "POST"
        })
        .then((response) => response.text())
        .then(() => {
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: 'Despesa alterada com sucesso',
                showConfirmButton: false,
                timer: 2000,
                toast: true
            })
        })
        .catch((error) => {
            console.warn(error);
        });
    }

    function delete_expense(id){
        fetch("delete_expense?" + new URLSearchParams({
            "id": id}), {method: "POST", redirect: 'follow'
        }).then((response) => {
            if (response.redirected) window.location.href = response.url;
            return
        })
        .then(() => {
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: 'Despesa deletada com sucesso',
                showConfirmButton: false,
                timer: 2000,
                toast: true
            })
        })
        .catch((error) => {
            console.warn(error);
        });
    }

    function fill_expenses(json){
        document.getElementsByClassName("expenses")[0].innerHTML = ''
        let searchType = document.getElementsByClassName("search_type")[0].value
        document.getElementsByClassName("expenses")[0].insertAdjacentHTML("beforeend",
            `
                <div class="col-3">
                    Nome
                </div>
                <div class="col-3 text-center">
                    Valor
                </div>
                <div class="col-3 text-center">
                    Categoria
                </div>
                <div class="col-3 text-center">
                    Data
                </div>
            `
        )
            let total = 0
            let lastDate = ""


            json.forEach(e => {
                total += e.value
                // total = parseFloat(total.toFixed(10))
                document.getElementsByClassName("expenses")[0].insertAdjacentHTML(
                    "beforeend",
                    `
                        <div class="col-3" expense="${e.id}" value=${e.name} ${e.date != lastDate ? "style=\"border-top: 2px solid #e1e1e1;\"" : ""}>
                            <span class="name" expense="${e.id}" value=${e.name} contenteditable="true">${e.name}</span> 
                        </div>
                        <div class="col-3 text-center" expense="${e.id}" ${e.date != lastDate ? "style=\"border-top: 2px solid #e1e1e1;\"" : ""}>
                            <span class="valor" expense="${e.id}" value="${e.value.toFixed(2)}" contenteditable="true">${e.value.toFixed(2)}</span>
                        </div>
                        <div class="col-3 text-center" ${e.date != lastDate ? "style=\"border-top: 2px solid #e1e1e1;\"" : ""}>
                            ${e.category} 
                        </div>
                        <div class="col-2 text-center" ${e.date != lastDate ? "style=\"border-top: 2px solid #e1e1e1;\"" : ""}>
                             ${e.date != lastDate ? e.date : ""}
                        </div>
                        <div class="col-1 text-center" ${e.date != lastDate ? "style=\"border-top: 2px solid #e1e1e1;\"" : ""}>
                            <!--<button class="btn btn-sm btn-outline-danger py-0" onclick="delete_expense(${e.id})">
                                <span><i class="ti ti-x"></i></span>
                            </button>-->
                            <button class="btn btn-sm btn-light py-0" onclick="open_edit_expense(${e.id})" data-bs-toggle="modal" data-bs-target="#exampleModal">
                                <span><i class="ti ti-pencil"></i></span>
                            </button>
                        </div>
                    `
                )
    
                lastDate = e.date
            })

            document.getElementsByClassName("total")[0].innerHTML = `Total ${total.toFixed(2)}`
    
            $('.name').on('blur', function(e){
                if(e.target.textContent.trim() != e.target.getAttribute("value")) {
                    e.target.setAttribute("value", e.target.textContent.trim()) 
                    fetch("edit_expense?" + new URLSearchParams({
                        "name": e.target.textContent.trim(),
                        "id": e.target.getAttribute("expense")}),
                    {
                        method: "POST"
                    })
                    .then((response) => response.text())
                    .then((html) => {
                        Swal.fire({
                            position: 'top-end',
                            icon: 'success',
                            title: 'Despesa salva com sucesso',
                            showConfirmButton: false,
                            timer: 2000,
                            toast: true
                          })
                    })
                    .catch((error) => {
                        console.warn(error);
                    });
                }
            })
            $('.valor').on('blur', function(e){
                if(e.target.textContent.trim() != e.target.getAttribute("value")) {
                    e.target.setAttribute("value", e.target.textContent.trim()) 
                    fetch("edit_expense?" + new URLSearchParams({
                        "value": e.target.textContent.trim(),
                        "id": e.target.getAttribute("expense")}),
                    {
                        method: "POST"
                    })
                    .then((response) => response.text())
                    .then((html) => {
                        Swal.fire({
                            position: 'top-end',
                            icon: 'success',
                            title: 'Despesa salva com sucesso',
                            showConfirmButton: false,
                            timer: 2000,
                            toast: true
                          })
                    })
                    .catch((error) => {
                        console.warn(error);
                    });
                }
            })
    }

    search_expenses()
</script>

{% endblock page %}